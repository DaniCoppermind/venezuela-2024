---
interface Props {
  images: string[];
  altText: string;
}

const { images, altText } = Astro.props;
---

<div class='relative w-full'>
  <div class='relative h-96 overflow-hidden rounded-lg'>
    {
      images.map((e) => (
        <img src={e} alt={altText} class='absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2' />
      ))
    }
  </div>
  <button
    class='absolute top-0 start-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer'
    aria-label='Previous'
  >
    <span class='inline-flex items-center justify-center w-6 h-6 rounded-full bg-white hover:bg-white/50'>
      <svg
        class='w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180'
        aria-hidden='true'
        xmlns='http://www.w3.org/2000/svg'
        fill='none'
        viewBox='0 0 6 10'
      >
        <path stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 1 1 5l4 4'
        ></path>
      </svg>
      <span class='sr-only'>Previous</span>
    </span>
  </button>
  <button
    class='absolute top-0 end-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer'
    aria-label='Next'
  >
    <span class='inline-flex items-center justify-center w-6 h-6 rounded-full bg-white hover:bg-white/50'>
      <svg
        class='w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180'
        aria-hidden='true'
        xmlns='http://www.w3.org/2000/svg'
        fill='none'
        viewBox='0 0 6 10'
      >
        <path stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m1 9 4-4-4-4'
        ></path>
      </svg>
      <span class='sr-only'>Next</span>
    </span>
  </button>
</div>
